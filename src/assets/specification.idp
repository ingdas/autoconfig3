vocabulary V {
    type Domain = {a;b;c}
    type Nums = {0..10} isa int
    type Nums2 = {0..3} isa int

    MinderDanAantalEdges : Nums

    Edge(Domain,Domain)
    Closure(Domain,Domain)

    AantalEdges : Nums

    FullyConnected

    NumberOfNeighbours(Domain) : Nums2
}

theory T : V{


    {
        Closure(x,y)<- Edge(x,y).
        Closure(x,y) <-?z : Edge(x,z) & Closure(z,y).
    }
    {
        AantalEdges = #{x y : Edge(x,y)}.
    }
    {
        FullyConnected <- ! x y : Closure(x,y).
    }
    MinderDanAantalEdges < AantalEdges.

    {
        NumberOfNeighbours(d) = #{x : Edge(d,x)}.
    }

}
